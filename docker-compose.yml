version: '3'

services:
  nginx:
    container_name: nginx
    restart: always
    build:
      context: .
      dockerfile: ./Dockerfile-nginx
    volumes:
      - static:/static
    ports:
      - "80:80"
    depends_on:
      - frontend

  frontend-db:
    container_name: frontend-db
    restart: always
    image: postgres:latest
    environment:
      POSTGRES_DB: stroamdb
      POSTGRES_USER: stroamuser
      POSTGRES_PASSWORD: stroam
  
  frontend-redis:
    container_name: frontend-redis
    restart: always
    image: redis:latest
    ports:
      - "6379:6379"
  
  frontend:
    container_name: frontend
    restart: always
    build: ./frontend
    command: bash -c "python manage.py migrate && python3 manage.py runserver 0.0.0.0:8000"
    environment:
      USE_DOCKER: 'yes'
      NOTIFICATION_SERVER_HOST: '127.0.0.1'
    volumes:
      - ./frontend:/code
      - static:/static
    ports:
      - "8000:8000"
    depends_on:
      - frontend-db
      - frontend-redis
    links:
      - catalog
  
  catalog:
    container_name: catalog
    restart: always
    build: ./catalog
    environment:
      NOTIFICATION_SERVER_HOST: '127.0.0.1'
      FRONTEND_HOST: frontend
    volumes:
      - ./catalog:/app
    ports:
      - "4000:4000"

  authserver:
    container_name: authserver
    restart: always
    build: ./authentication/authserver
    volumes:
      - ./authentication/authserver:/app
    ports:
      - "3000:3000"

  authclient:
    container_name: authclient
    restart: always
    build: ./authentication/authclient
    volumes:
      - ./authentication/authclient:/app
    ports:
      - "4200:4200"

  payment:
    container_name: payment
    restart: always
    build: ./payment
    volumes:
      - ./payment:/app
      - static:/static
    ports:
      - "5000:5000"

  cdn:
    container_name: cdn
    restart: always
    build: ./cdn
    volumes:
      - ./cdn/webrtc:/app
    ports:
      - "1935:1935"

  #notification - notTheService services
  mosquitto:
    image: eclipse-mosquitto:1.4.12
    container_name: mosquittoserver
    restart: always
    ports:
      - "1884:1884"
    volumes:
      - ./notification/configurations/mosquitto.conf:/mosquitto/config/mosquitto.conf
  
  tvialmail:
    image: tvial/docker-mailserver:release-v6.1.0
    hostname: tvialmail
    domainname: nottheservice.com
    container_name: tvialmailserver
    restart: always
    ports:
      - "587:587"
      - "993:993"
    volumes:
      - maildata:/var/mail
      - mailstate:/var/mail-state
      - ./config/:/tmp/docker-mailserver/
    environment:
      - ENABLE_SPAMASSASSIN=1
      - ENABLE_CLAMAV=1
      - ENABLE_FAIL2BAN=1
      - ENABLE_POSTGREY=1
      - ONE_DIR=1
      - DMS_DEBUG=0
    cap_add:
      - NET_ADMIN
      - SYS_PTRACE

  nottheservice:
    image: nottheservice
    container_name: nottheserviceserver
    restart: always
    build: ./notification
    volumes:
      - ./notification/configurations/nottheservice.conf:/usr/src/notification/nottheservice.conf
    depends_on:
      - mosquitto
      - tvialmail

volumes:
  maildata:
    driver: local
  mailstate:
    driver: local
  static: